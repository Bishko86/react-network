{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogUser/DialogUser.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/WriteMessage/WriteMessage.module.css","components/Dialogs/DialogUser/DialogUser.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogArea/DialogArea.jsx","components/Dialogs/WriteMessage/WriteMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogContainer.jsx"],"names":["module","exports","DialogUser","props","path","id","className","style","dialog_item","AvatarUser","url","user","to","activeClassName","active","name","Message","message","length","console","log","Error","DialogArea","messageElement","dialogPage","dialogUser","userId","dialog","map","me","avatar","key","MessageForm","onSubmit","render","handleSubmit","submitting","validate","composeValidators","required","maxLengthInput","typefield","input","meta","disabled","WriteMessage","writeText","values","sendMessage","textMessage","Dialogs","dialogsElement","elem","index","match","params","dialogs","dialog_user_block","messageBlock","messageArea","textArea","Protector","this","React","Component","AuthRedirectComponent","withAuthRedirect","RouteData","withRouter","DialogContainer","connect","state"],"mappings":"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","file":"static/js/3.74b6d937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__21K5T\",\"messageBlock\":\"Dialogs_messageBlock__9LB4a\",\"messageArea\":\"Dialogs_messageArea__3RjT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_item\":\"DialogUser_dialog_item__3BZ7O\",\"user\":\"DialogUser_user__3w7R6\",\"active\":\"DialogUser_active__27m5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2F74O\",\"unmessage\":\"Message_unmessage__2t9RL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeText\":\"WriteMessage_writeText__3eADJ\",\"textaria\":\"WriteMessage_textaria__1D9Ou\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AvatarUser from '../AvatarUser/AvatarUser';\r\nimport style from './DialogUser.module.css';\r\n\r\nconst DialogUser = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.dialog_item}>\r\n            <AvatarUser url={props.url} />\r\n            <NavLink className={style.user} to={path} activeClassName={style.active}> {props.name} </NavLink>\r\n        </div >\r\n    )\r\n}\r\nexport default DialogUser;","import React from 'react';\r\nimport AvatarUser from '../AvatarUser/AvatarUser';\r\nimport style from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    if (props.message.length <= 2) {\r\n        console.log(props.message.length);\r\n\r\n        new Error('I fell')\r\n    }\r\n    return (\r\n\r\n        <div className={style[props.style]}>\r\n            <AvatarUser url={props.url} />\r\n            {props.message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport Message from './../Message/Message'\r\n\r\nconst DialogArea = (props) => {\r\n    let messageElement = props.dialogPage.dialogUser[props.userId].dialog.map(message => {\r\n        let style = message.me ? 'message' : 'unmessage';\r\n        let avatar = message.me ? 'https://i.pinimg.com/736x/bb/5b/10/bb5b10c86dc0bb0591b113a78fc837ec.jpg' : props.dialogPage.dialogUser[props.userId].url;\r\n        let key = message.id;\r\n\r\n        return (\r\n            <Message message={message.message}\r\n                url={avatar}\r\n                style={style}\r\n                key={key}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {messageElement}\r\n        </div>\r\n    )\r\n}\r\nexport default DialogArea;","import React from 'react';\r\nimport style from './WriteMessage.module.css';\r\nimport { required, maxLengthInput, composeValidators } from '../../validators/validators.js'\r\nimport { Form, Field } from 'react-final-form';\r\nimport FormControl from './../../../common/FormsControl/FormsControl';\r\n\r\nconst WriteMessage = (props) => {\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.textMessage, props.userId);\r\n        values.textMessage = '';\r\n    }\r\n\r\n    return (<div className={style.writeText}>\r\n        <MessageForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n    );\r\n}\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Form\r\n\r\n            onSubmit={props.onSubmit}\r\n            render={({ handleSubmit, submitting }) => (\r\n                <form onSubmit={handleSubmit} name='sendMessageForm'>\r\n                    <Field name='textMessage' validate={composeValidators(required, maxLengthInput(20))} typefield='textarea' >\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <FormControl typefield='textarea' input={input} meta={meta} />\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <button disabled={submitting}>Send</button>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default WriteMessage;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogUser from './DialogUser/DialogUser';\r\nimport DialogArea from './DialogArea/DialogArea';\r\nimport WriteMessage from './WriteMessage/WriteMessage';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement = props.dialogPage.dialogUser.map((elem, index) => <DialogUser id={index + 1} name={elem.name} url={elem.url} key={index + 1} dialog={elem.dialog} />\r\n    );\r\n\r\n    let userId = props.match.params.userId - 1;\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialog_user_block}>\r\n                {dialogsElement}\r\n            </div>\r\n            {props.match.params.userId &&\r\n                <div className={style.messageBlock}>\r\n                    <div className={style.messageArea}>\r\n                        <DialogArea userId={userId} dialogPage={props.dialogPage} />\r\n                    </div>\r\n                    <div className={style.textArea}>\r\n                        <WriteMessage sendMessage={props.sendMessage} userId={userId} />\r\n\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from './../../hoc/WithAuthRedirect'\r\nimport { sendMessage } from '../Durax/dialog-reducer';\r\n\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Protector extends React.Component {\r\n\r\n    render() {\r\n        return <Dialogs {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\nconst AuthRedirectComponent = withAuthRedirect(Protector);\r\nconst RouteData = withRouter(AuthRedirectComponent)\r\n\r\n\r\nconst DialogContainer = connect(\r\n    mapStateToProps,\r\n    { sendMessage }\r\n)(RouteData);\r\nexport default DialogContainer;"],"sourceRoot":""}